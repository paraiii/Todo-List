{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  id: 1,\n  desc: '',\n  category: '',\n  content: '',\n  addTodo: todo => {},\n  removeTodo: id => {}\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue);\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [inputDesc, setInputDesc] = useState('');\n  const [inputCate, setInputCate] = useState('');\n  const [inputCont, setInputCont] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  const handleChangeDesc = event => {\n    setInputDesc(event.target.value);\n  };\n\n  const handleChangeCate = event => {\n    setInputCate(event.target.value);\n  };\n\n  const handleChangeCont = event => {\n    setInputCont(event.target.value);\n  };\n\n  const addTodo = () => {\n    const newTodo = {\n      todoName: inputDesc,\n      category: inputCate,\n      content: inputCont\n    };\n    setTodoList([...todoList, newTodo]);\n    setInputDesc(\"\");\n    setInputCate(\"\");\n    setInputCont(\"\");\n  };\n\n  const removeTodo = TodoNameDelete => {\n    setTodoList(todoList.filter(inputDesc => {\n      return inputDesc.todoName != TodoNameDelete;\n    }));\n  };\n\n  const values = {\n    todoList: [],\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont,\n    add: addTodo,\n    remove: removeTodo\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TodoContextProvider, \"cMfv7L6CJW2UPo6mOijE5elZveI=\");\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["createContext","useState","initialValue","todoList","id","desc","category","content","addTodo","todo","removeTodo","TodoContext","TodoContextProvider","props","children","inputDesc","setInputDesc","inputCate","setInputCate","inputCont","setInputCont","setTodoList","handleChangeDesc","event","target","value","handleChangeCate","handleChangeCont","newTodo","todoName","TodoNameDelete","filter","values","Math","floor","random","add","remove"],"mappings":";;;AAAA,SAAsBA,aAAtB,EAAqCC,QAArC,QAAqD,OAArD;;AAkBA,OAAO,MAAMC,YAA8B,GAAG;AAC1CC,EAAAA,QAAQ,EAAE,EADgC;AAE1CC,EAAAA,EAAE,EAAE,CAFsC;AAG1CC,EAAAA,IAAI,EAAE,EAHoC;AAI1CC,EAAAA,QAAQ,EAAE,EAJgC;AAK1CC,EAAAA,OAAO,EAAE,EALiC;AAM1CC,EAAAA,OAAO,EAAGC,IAAD,IAAiB,CAAE,CANc;AAO1CC,EAAAA,UAAU,EAAGN,EAAD,IAAe,CAAE;AAPa,CAAvC;AAUP,OAAO,MAAMO,WAAW,gBAAGX,aAAa,CAACE,YAAD,CAAjC;AAEP,OAAO,MAAMU,mBAAmB,GAAIC,KAAD,IAA4B;AAAA;;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACE,QAAD,EAAWkB,WAAX,IAA0BpB,QAAQ,CAAc,EAAd,CAAxC;;AAGA,QAAMqB,gBAAgB,GAAIC,KAAD,IAA0C;AAC/DP,IAAAA,YAAY,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAGH,KAAD,IAA0C;AAC9DL,IAAAA,YAAY,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAGA,QAAME,gBAAgB,GAAIJ,KAAD,IAA0C;AAC/DH,IAAAA,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAMjB,OAAO,GAAG,MAAY;AAExB,UAAMoB,OAAO,GAAG;AAAEC,MAAAA,QAAQ,EAAEd,SAAZ;AAAuBT,MAAAA,QAAQ,EAAEW,SAAjC;AAA4CV,MAAAA,OAAO,EAAEY;AAArD,KAAhB;AACAE,IAAAA,WAAW,CAAC,CAAC,GAAGlB,QAAJ,EAAcyB,OAAd,CAAD,CAAX;AACAZ,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAPD;;AASA,QAAMV,UAAU,GAAIoB,cAAD,IAAkC;AACjDT,IAAAA,WAAW,CACPlB,QAAQ,CAAC4B,MAAT,CAAiBhB,SAAD,IAAc;AAC1B,aAAOA,SAAS,CAACc,QAAV,IAAsBC,cAA7B;AACH,KAFD,CADO,CAAX;AAKH,GAND;;AAQA,QAAME,MAAM,GAAG;AACX7B,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,EAAE,EAAC6B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAFQ;AAE2B;AACtC9B,IAAAA,IAAI,EAAEU,SAHK;AAIXT,IAAAA,QAAQ,EAAEW,SAJC;AAKXV,IAAAA,OAAO,EAAEY,SALE;AAMXiB,IAAAA,GAAG,EAAE5B,OANM;AAOX6B,IAAAA,MAAM,EAAE3B;AAPG,GAAf;AAWI,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEsB,MAA7B;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApDE;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import { ChangeEvent, createContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { InputContent, InputDescription, InputCategory, TodoItem, ItodoList } from \"../types\";\n\n\ninterface TodoContextProp {\n    children: any;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    id: number,\n    desc: InputDescription,\n    category: InputCategory;\n    content: string;\n    addTodo: (todo: TodoItem) => void;\n    removeTodo: (id: number) => void;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    id: 1,\n    desc: '',\n    category: '',\n    content: '',\n    addTodo: (todo:TodoItem)=>{},\n    removeTodo: (id:number) => {},\n}\n\nexport const TodoContext = createContext(initialValue);\n\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n\n    const [inputDesc, setInputDesc] = useState<string>('')\n    const [inputCate, setInputCate] = useState<string>('')\n    const [inputCont, setInputCont] = useState<string>('')\n    const [todoList, setTodoList] = useState<ItodoList[]>([]);\n\n\n    const handleChangeDesc = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputDesc(event.target.value)\n    };\n    const handleChangeCate= (event: ChangeEvent<HTMLInputElement>) => {\n        setInputCate(event.target.value)\n    };\n    const handleChangeCont = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputCont(event.target.value)\n    };\n\n    const addTodo = (): void => {\n\n        const newTodo = { todoName: inputDesc, category: inputCate, content: inputCont};\n        setTodoList([...todoList, newTodo]);\n        setInputDesc(\"\");\n        setInputCate(\"\");\n        setInputCont(\"\");\n    };\n\n    const removeTodo = (TodoNameDelete: string): void => {\n        setTodoList (\n            todoList.filter((inputDesc)=> {\n                return inputDesc.todoName != TodoNameDelete;\n            })\n        );\n    };\n\n    const values = {\n        todoList: [],\n        id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        desc: inputDesc,\n        category: inputCate,\n        content: inputCont,\n        add: addTodo,\n        remove: removeTodo\n    };\n    \n    \n        return (\n            <TodoContext.Provider value={values}>\n                {children}\n            </TodoContext.Provider>\n        );\n    }\n    \n"]},"metadata":{},"sourceType":"module"}