{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {// todoList: TodoItem[]\n}; // 先定义一个context\n\nexport const TodoContext = /*#__PURE__*/createContext({});\n\nconst TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [inputDesc, setInputDesc] = useState([{\n    Description: \"1\"\n  }, {\n    Description: \"2\"\n  }]);\n  const [inputCate, setInputCate] = useState([]);\n  const [inputCont, setInputCont] = useState(['']);\n  const [todos, setTodos] = useState([]); // const addTodo = todo => {\n  //     // const newTodos = [todo, ...todos];\n  //     // setTodos(newTodos);\n  //     const newInputDesc = [todo, ...todos]\n  //     setInputDesc(newInputDesc);\n  // };\n  // const removeTodo = id => {\n  //     const removeArr = [...todos].filter(todo => todo.id !== id);\n  //     setTodos(removeArr);\n  // };\n\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont // actions: {\n    //     add: addTodo,\n    //     remove: removeTodo\n    // }\n\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoContextProvider, \"RYusFFcfuqq8fkADUFvG7jLi1tc=\");\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.tsx"],"names":["React","createContext","useState","initialValue","TodoContext","TodoContextProvider","props","children","inputDesc","setInputDesc","Description","inputCate","setInputCate","inputCont","setInputCont","todos","setTodos","values","id","Math","floor","random","desc","category","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,aAA1B,EAAyCC,QAAzC,QAAyD,OAAzD;;AAQA,OAAO,MAAMC,YAAY,GAAG,CACxB;AADwB,CAArB,C,CAGP;;AACA,OAAO,MAAMC,WAAW,gBAAIH,aAAa,CAAE,EAAF,CAAlC;;AAEN,MAAMI,mBAAmB,GAAIC,KAAD,IAA6B;AAAA;;AACtD,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CACvC;AAACQ,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAXsD,CActD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMe,MAAM,GAAG;AACXC,IAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAC2B;AACtCC,IAAAA,IAAI,EAAEd,SAFK;AAGXe,IAAAA,QAAQ,EAAEZ,SAHC;AAIXa,IAAAA,OAAO,EAAEX,SAJE,CAKX;AACA;AACA;AACA;;AARW,GAAf;AAaA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,MAA7B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5CA;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import React, { Children, createContext, useState } from 'react';\nimport TodoItem from '../../TodoItem';\nimport Delete from '../Delete';\n\ninterface TodoContextProps {\n    children: object\n}\n\nexport const initialValue = {\n    // todoList: TodoItem[]\n}\n// 先定义一个context\nexport const TodoContext  = createContext ({});\n\n const TodoContextProvider = (props: TodoContextProps) => {\n    const {children} = props;\n    const [inputDesc, setInputDesc] = useState([\n        {Description: \"1\"},\n        {Description: \"2\"}\n    ]);\n    const [inputCate, setInputCate] = useState([\n    ]); \n    \n    const [inputCont, setInputCont] = useState(['']); \n\n    const [todos, setTodos] = useState([]);\n\n    \n    // const addTodo = todo => {\n    //     // const newTodos = [todo, ...todos];\n    //     // setTodos(newTodos);\n    //     const newInputDesc = [todo, ...todos]\n    //     setInputDesc(newInputDesc);\n    // };\n\n    // const removeTodo = id => {\n    //     const removeArr = [...todos].filter(todo => todo.id !== id);\n    //     setTodos(removeArr);\n    // };\n  \n    const values = {\n        id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        desc: inputDesc,\n        category: inputCate,\n        content: inputCont,\n        // actions: {\n        //     add: addTodo,\n        //     remove: removeTodo\n        // }\n    };\n\n    \n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}