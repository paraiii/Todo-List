{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContextProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {};\nconst TodoContext = /*#__PURE__*/createContext(initialValue);\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [inputDesc, setInputDesc] = useState([{\n    Description: \"1\"\n  }, {\n    Description: \"2\"\n  }]);\n  const [inputCate, setInputCate] = useState([]);\n  const [inputCont, setInputCont] = useState(['']);\n  const [todos, setTodos] = useState([]); // const addTodo = todo => {\n  //     // const newTodos = [todo, ...todos];\n  //     // setTodos(newTodos);\n  //     const newInputDesc = [todo, ...todos]\n  //     setInputDesc(newInputDesc);\n  // };\n  // const removeTodo = id => {\n  //     const removeArr = [...todos].filter(todo => todo.id !== id);\n  //     setTodos(removeArr);\n  // };\n\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont // actions: {\n    //     add: addTodo,\n    //     remove: removeTodo\n    // }\n\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TodoContextProvider, \"l4nASkTq5o3QCFAAvh93+kcChGs=\");\n\n_c = TodoContextProvider;\nconst NavContainer = styled.div`\n  \n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContextProvider.tsx"],"names":["createContext","useState","styled","initialValue","TodoContext","TodoContextProvider","props","children","inputDesc","setInputDesc","Description","inputCate","setInputCate","inputCont","setInputCont","todos","setTodos","values","id","Math","floor","random","desc","category","content","NavContainer","div"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAQA,OAAO,MAAMC,YAAY,GAAG,EAArB;AAIP,MAAMC,WAAW,gBAAGJ,aAAa,CAACG,YAAD,CAAjC;AAEC,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAA4B;AAAA;;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CACvC;AAACS,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAXwD,CAcxD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMgB,MAAM,GAAG;AACXC,IAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAC2B;AACtCC,IAAAA,IAAI,EAAEd,SAFK;AAGXe,IAAAA,QAAQ,EAAEZ,SAHC;AAIXa,IAAAA,OAAO,EAAEX,SAJE,CAKX;AACA;AACA;AACA;;AARW,GAAf;AAaA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,MAA7B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5CG;;GAAMF,mB;;KAAAA,mB;AA+Cd,MAAMoB,YAAY,GAAGvB,MAAM,CAACwB,GAAI;AAChC;AACA,CAFA","sourcesContent":["import { createContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\n\ninterface TodoContextProp {\n    children: any;\n    initialValue: any;\n}\n\nexport const initialValue = {\n\n}\n\nconst TodoContext = createContext(initialValue);\n\n export const TodoContextProvider = (props: TodoContextProp) => {\n        const {children} = props;\n        const [inputDesc, setInputDesc] = useState([\n            {Description: \"1\"},\n            {Description: \"2\"}\n        ]);\n        const [inputCate, setInputCate] = useState([\n        ]); \n        \n        const [inputCont, setInputCont] = useState(['']); \n    \n        const [todos, setTodos] = useState([]);\n    \n        \n        // const addTodo = todo => {\n        //     // const newTodos = [todo, ...todos];\n        //     // setTodos(newTodos);\n        //     const newInputDesc = [todo, ...todos]\n        //     setInputDesc(newInputDesc);\n        // };\n    \n        // const removeTodo = id => {\n        //     const removeArr = [...todos].filter(todo => todo.id !== id);\n        //     setTodos(removeArr);\n        // };\n      \n        const values = {\n            id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n            desc: inputDesc,\n            category: inputCate,\n            content: inputCont,\n            // actions: {\n            //     add: addTodo,\n            //     remove: removeTodo\n            // }\n        };\n    \n        \n    \n        return (\n            <TodoContext.Provider value={values}>\n                {children}\n            </TodoContext.Provider>\n        );\n    }\n    \n\nconst NavContainer = styled.div`\n  \n`"]},"metadata":{},"sourceType":"module"}