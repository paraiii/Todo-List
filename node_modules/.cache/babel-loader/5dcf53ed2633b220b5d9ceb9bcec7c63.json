{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { useSnackbar } from 'notistack';\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  loading: false,\n  addTodo: todo => {},\n  handleClick: todo => {},\n  removeTodo: id => {},\n  handleCheck: (id, checked) => {},\n  handleDelete: () => {}\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue); // const KEY = \"paraiii-todo-list\";\n\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props; // const storage = window.localStorage;\n  // const storedList = storage.getItem(KEY) || \"[]\"\n  // const [todoList, setTodoList] = useState<TodoItem[]>(JSON.parse(storedList));\n\n  const [todoList, setTodoList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true); //     storage.setItem(KEY, JSON.stringify(todoList));\n    // }, [todoList])\n    //每当todolist改变时，把东西存到storage里\n    // AddTask().then(res => {\n    //     //  setTodoList(res.data)\n    //      addTodo(res.data.data) //data里有count和data两部分，不是一个obj\n    // })\n\n    GetAllTasks().then(res => {\n      setLoading(false);\n      const todoDtos = res.data.data;\n      const todoItems = todoDtos.map(todoDto => {\n        const content = JSON.parse(todoDto.description);\n        return { ...content,\n          id: todoDto._id\n        };\n      });\n      setTodoList(todoItems);\n    }); // }, [todoList]); //不能有这个dependency\n  }, []);\n\n  const addTodo = todo => {\n    const todoDto = {\n      \"description\": JSON.stringify(todo)\n    };\n    setLoading(true);\n    AddTask(todoDto).then(res => {\n      //点击button之后拿到response\n      setLoading(false);\n      todo.id = res.data.data._id;\n      setTodoList([...todoList, todo]);\n    });\n  };\n\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar('I love hooks');\n  };\n\n  const removeTodo = id => {\n    DeleteTask(id).then(res => {\n      setTodoList(todoList.filter(item => {\n        return item.id !== id;\n      }));\n    });\n  }; // const removeTodos = (ids: string): void => {\n  //     Promise.all(\n  //         ids.map(id => DeleteTask(id))\n  //     ).then ((values) =>{\n  //         console.log(values);\n  //     }\n  //     )\n  // }\n\n\n  const handleCheck = useCallback((id, checked) => {\n    const modifiedTodoList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.checked = !todoItem.checked;\n      }\n\n      return todoItem;\n    });\n    setTodoList(modifiedTodoList);\n  }, [todoList]);\n  const handleDelete = useCallback(() => {\n    const filteredTodoList = todoList.filter(todoItem => todoItem.checked === false);\n    debugger;\n    setTodoList(filteredTodoList);\n  }, [todoList]);\n  const values = {\n    todoList: todoList,\n    loading: loading,\n    addTodo: addTodo,\n    handleClick: handleClick,\n    removeTodo: removeTodo,\n    handleCheck: handleCheck,\n    handleDelete: handleDelete\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoContextProvider, \"U/wFHQ/7Sycb3krIKK/TaXjzIlI=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["createContext","useCallback","useEffect","useState","useSnackbar","AddTask","DeleteTask","GetAllTasks","initialValue","todoList","loading","addTodo","todo","handleClick","removeTodo","id","handleCheck","checked","handleDelete","TodoContext","TodoContextProvider","props","children","setTodoList","setLoading","then","res","todoDtos","data","todoItems","map","todoDto","content","JSON","parse","description","_id","stringify","enqueueSnackbar","closeSnackbar","filter","item","modifiedTodoList","todoItem","filteredTodoList","values"],"mappings":"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","sourcesContent":["import { createContext, useCallback, useEffect, useState } from \"react\";\nimport { useSnackbar } from 'notistack';\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { TodoDto, TodoItem } from \"../types\";\n\ninterface TodoContextProp {\n    children: any;\n    value: TodoContextValue;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    loading: boolean;\n    addTodo: (todo: TodoItem) => void;\n    handleClick: (todo: TodoItem) => void;\n    removeTodo: (id: string) => void;\n    handleCheck: (id: string, checked: boolean) => void;\n    handleDelete: () => void;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    loading: false,\n    addTodo: (todo:TodoItem)=>{},\n    handleClick: (todo:TodoItem)=>{},\n    removeTodo: (id: string) => {},\n    handleCheck: (id: string, checked: boolean) => {},\n    handleDelete: () => {},\n}\n\nexport const TodoContext = createContext(initialValue);\n// const KEY = \"paraiii-todo-list\";\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n    // const storage = window.localStorage;\n    // const storedList = storage.getItem(KEY) || \"[]\"\n    // const [todoList, setTodoList] = useState<TodoItem[]>(JSON.parse(storedList));\n    const [todoList, setTodoList] = useState<TodoItem[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    useEffect (() => {\n        setLoading(true);\n    //     storage.setItem(KEY, JSON.stringify(todoList));\n    // }, [todoList])\n        //每当todolist改变时，把东西存到storage里\n        // AddTask().then(res => {\n        //     //  setTodoList(res.data)\n        //      addTodo(res.data.data) //data里有count和data两部分，不是一个obj\n        // })\n        GetAllTasks().then(res => {\n            setLoading(false);\n            const todoDtos = res.data.data;\n            const todoItems = todoDtos.map((todoDto: TodoDto) => {\n                const content: Partial<TodoItem> = JSON.parse(todoDto.description)\n                return { ...content,id: todoDto._id}\n            })\n            setTodoList(todoItems)\n       })\n    // }, [todoList]); //不能有这个dependency\n    }, []);\n\n    const addTodo = (todo: TodoItem): void => {\n        const todoDto: Partial<TodoDto> = {\n            \"description\": JSON.stringify(todo)\n        }; \n        setLoading(true);\n        AddTask(todoDto).then(res => { //点击button之后拿到response\n            setLoading(false);\n            todo.id = res.data.data._id\n            setTodoList([...todoList, todo]);\n        });\n    };\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    const handleClick = () => {\n        enqueueSnackbar('I love hooks');\n    };\n        \n    \n    const removeTodo = (id: string): void => {\n        DeleteTask(id).then(res => {\n            setTodoList (\n                todoList.filter((item)=> {\n                    return item.id !== id;\n                })\n            );\n        })\n    };\n\n    // const removeTodos = (ids: string): void => {\n    //     Promise.all(\n    //         ids.map(id => DeleteTask(id))\n    //     ).then ((values) =>{\n    //         console.log(values);\n    //     }\n            \n    //     )\n    // }\n    \n    const handleCheck = useCallback ((id:string, checked: boolean) => {\n        const modifiedTodoList = todoList.map((todoItem) => {\n          if (todoItem.id === id) {\n            todoItem.checked = !todoItem.checked;\n          }\n          return todoItem;\n        });\n        setTodoList(modifiedTodoList);\n    }, [todoList]);\n\n    const handleDelete = useCallback (() => {\n        const filteredTodoList = todoList.filter((todoItem) => todoItem.checked === false);\n        debugger\n        setTodoList(filteredTodoList);\n    }, [todoList]);\n\n    const values: TodoContextValue = {\n        todoList: todoList,\n        loading: loading,\n        addTodo: addTodo,\n        handleClick: handleClick,\n        removeTodo: removeTodo,\n        handleCheck: handleCheck,\n        handleDelete: handleDelete,\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}