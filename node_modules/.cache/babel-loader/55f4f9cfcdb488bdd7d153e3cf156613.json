{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from \"notistack\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  loading: false,\n  addTodo: todo => {},\n  removeTodo: id => {},\n  handleCheck: (id, checked) => {},\n  todoCompleted: (id, done) => {},\n  handleDelete: () => {}\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue);\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [todoList, setTodoList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    setLoading(true);\n    GetAllTasks().then(res => {\n      setLoading(false);\n      const todoDtos = res.data.data;\n      const todoItems = todoDtos.map(todoDto => {\n        const content = JSON.parse(todoDto.description);\n        return { ...content,\n          id: todoDto._id\n        };\n      });\n      setTodoList(todoItems);\n    }); // }, [todoList]); //不能有这个dependency\n  }, []);\n\n  const addTodo = todo => {\n    const todoDto = {\n      \"description\": JSON.stringify(todo)\n    };\n    setLoading(true);\n    AddTask(todoDto).then(res => {\n      //点击button之后拿到response\n      setLoading(false);\n      todo.id = res.data.data._id;\n      setTodoList([...todoList, todo]);\n      enqueueSnackbar('Successfully done the operation.');\n    });\n  };\n\n  const removeTodo = id => {\n    DeleteTask(id).then(res => {\n      setTodoList(todoList.filter(item => {\n        return item.id !== id;\n      }));\n    });\n  };\n\n  const handleCheck = useCallback((id, checked) => {\n    const modifiedTodoList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.checked = !todoItem.checked;\n      }\n\n      return todoItem;\n    });\n    setTodoList(modifiedTodoList);\n  }, [todoList]);\n\n  const todoCompleted = (id, done) => {\n    const setList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.done = !todoItem.done;\n      }\n\n      return todoItem;\n    });\n    setTodoList(setList);\n  };\n\n  const handleDelete = useCallback(() => {\n    const filteredTodoList = todoList.filter(todoItem => todoItem.checked === false);\n    setTodoList(filteredTodoList);\n  }, [todoList]);\n  const values = {\n    todoList: todoList,\n    loading: loading,\n    addTodo: addTodo,\n    removeTodo: removeTodo,\n    handleCheck: handleCheck,\n    todoCompleted: todoCompleted,\n    handleDelete: handleDelete\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoContextProvider, \"IVFG8taZA8iMDQEqV2iUe4R716Q=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = TodoContextProvider;\n\nfunction enqueueSnackbar(arg0) {\n  throw new Error(\"Function not implemented.\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["useSnackbar","createContext","useCallback","useEffect","useState","AddTask","DeleteTask","GetAllTasks","initialValue","todoList","loading","addTodo","todo","removeTodo","id","handleCheck","checked","todoCompleted","done","handleDelete","TodoContext","TodoContextProvider","props","children","setTodoList","setLoading","enqueueSnackbar","closeSnackbar","then","res","todoDtos","data","todoItems","map","todoDto","content","JSON","parse","description","_id","stringify","filter","item","modifiedTodoList","todoItem","setList","filteredTodoList","values","arg0","Error"],"mappings":"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","sourcesContent":["import { useSnackbar } from \"notistack\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { TodoDto, TodoItem } from \"../types\";\n\ninterface TodoContextProp {\n    children: any;\n    value: TodoContextValue;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    loading: boolean;\n    addTodo: (todo: TodoItem) => void;\n    removeTodo: (id: string) => void;\n    handleCheck: (id: string, checked: boolean) => void;\n    todoCompleted: (id: string, done: boolean) => void;\n    handleDelete: () => void;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    loading: false,\n    addTodo: (todo:TodoItem)=>{},\n    removeTodo: (id: string) => {},\n    handleCheck: (id: string, checked: boolean) => {},\n    todoCompleted: (id: string, done: boolean) => {},\n    handleDelete: () => {},\n}\n\nexport const TodoContext = createContext(initialValue);\n\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n    const [todoList, setTodoList] = useState<TodoItem[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);      \n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    \n    useEffect (() => {\n        setLoading(true);\n        GetAllTasks().then(res => {\n            setLoading(false);\n            const todoDtos = res.data.data;\n            const todoItems = todoDtos.map((todoDto: TodoDto) => {\n                const content: Partial<TodoItem> = JSON.parse(todoDto.description)\n                return { ...content, id: todoDto._id}\n            })\n            setTodoList(todoItems)\n       })\n    // }, [todoList]); //不能有这个dependency\n    }, []);\n\n    const addTodo = (todo: TodoItem): void => {\n        const todoDto: Partial<TodoDto> = {\n            \"description\": JSON.stringify(todo)\n        }; \n        setLoading(true);\n        AddTask(todoDto).then(res => { //点击button之后拿到response\n            setLoading(false);\n            todo.id = res.data.data._id\n            setTodoList([...todoList, todo]);\n                enqueueSnackbar('Successfully done the operation.' )            \n        });\n    };  \n    \n    const removeTodo = (id: string): void => {\n        DeleteTask(id).then(res => {\n            setTodoList (\n                todoList.filter((item)=> {\n                    return item.id !== id;\n                })\n            );\n        })\n    };\n    \n    const handleCheck = useCallback ((id:string, checked: boolean) => {\n        const modifiedTodoList = todoList.map((todoItem) => {\n          if (todoItem.id === id) {\n            todoItem.checked = !todoItem.checked;\n          }\n          return todoItem;\n        });\n        setTodoList(modifiedTodoList);\n    }, [todoList]);\n\n    const todoCompleted = (id: string, done: boolean): void => {\n        const setList = todoList.map((todoItem)=> {\n            if (todoItem.id === id) {\n                todoItem.done = !todoItem.done;\n            }\n            return todoItem;\n        });   \n        setTodoList(setList);\n    };\n\n    const handleDelete = useCallback (() => {\n        const filteredTodoList = todoList.filter((todoItem) => todoItem.checked === false);\n        setTodoList(filteredTodoList);\n    }, [todoList]);\n\n    const values: TodoContextValue = {\n        todoList: todoList,\n        loading: loading,\n        addTodo: addTodo,\n        removeTodo: removeTodo,\n        handleCheck: handleCheck,\n        todoCompleted: todoCompleted,\n        handleDelete: handleDelete,\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\nfunction enqueueSnackbar(arg0: string) {\n    throw new Error(\"Function not implemented.\");\n}\n\n"]},"metadata":{},"sourceType":"module"}