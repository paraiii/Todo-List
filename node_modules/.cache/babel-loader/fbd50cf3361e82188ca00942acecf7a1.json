{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Delete from '../Delete'; // export interface AllData {\n// }\n// export const mock: AllData = {\n// }\n// export const TodoContext = React.createContext(mock)\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoContext(props) {\n  _s();\n\n  const [inputDesc, setInputDesc] = useState([{\n    Description: 1\n  }, {\n    Description: 2\n  }]);\n\n  const handleChangeDesc = e => {\n    setInputDesc(e.target.value);\n  };\n\n  const [inputCate, setInputCate] = useState([{\n    Categoty: \"aa\"\n  }, {\n    Categoty: \"bb\"\n  }]);\n  const [inputCont, setInputCont] = useState(['']);\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: [props.inputDesc, props.inputCate]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n} // const TodoContextConsumer = TodoContext.Consumer;\n// export { TodoContext, TodoContextConsumer };\n\n\n_s(TodoContext, \"wcVUaW1n5AlHYSP6TKtDfLMBF3o=\");\n\n_c = TodoContext;\nexport default TodoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContext\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js"],"names":["React","useState","Delete","TodoContext","props","inputDesc","setInputDesc","Description","handleChangeDesc","e","target","value","inputCate","setInputCate","Categoty","inputCont","setInputCont","todos","setTodos","addTodo","todo","newTodos","removeTodo","id","removeArr","filter","values","Math","floor","random","desc","category","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;AAIA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAGzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CACvC;AAACM,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;;AAIA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CACvC;AAACa,IAAAA,QAAQ,EAAE;AAAX,GADuC,EAEvC;AAACA,IAAAA,QAAQ,EAAE;AAAX,GAFuC,CAAD,CAA1C;AAKA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AAGA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMkB,OAAO,GAAGC,IAAI,IAAI;AACpB,UAAMC,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGP,KAAJ,EAAWQ,MAAX,CAAkBL,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYA,EAAtC,CAAlB;AACAL,IAAAA,QAAQ,CAACM,SAAD,CAAR;AACH,GAHD;;AAKA,QAAME,MAAM,GAAG;AACXH,IAAAA,EAAE,EAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAC2B;AACtCC,IAAAA,IAAI,EAAEzB,SAFK;AAGX0B,IAAAA,QAAQ,EAAEnB,SAHC;AAIXoB,IAAAA,OAAO,EAAEjB;AAJE,GAAf;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEW,MAA7B;AAAA,eACKtB,KAAK,CAACC,SADX,EAEKD,KAAK,CAACQ,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CAED;AACA;;;GAhDST,W;;KAAAA,W;AAiDT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport Delete from '../Delete';\n\n// export interface AllData {\n// }\n\n// export const mock: AllData = {\n    \n// }\n\n// export const TodoContext = React.createContext(mock)\n\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\n\n\nfunction TodoContext (props) {\n\n\n    const [inputDesc, setInputDesc] = useState([\n        {Description: 1},\n        {Description: 2}\n    ]);\n    const handleChangeDesc = e => {\n        setInputDesc(e.target.value);\n    }\n\n    const [inputCate, setInputCate] = useState([\n        {Categoty: \"aa\"},\n        {Categoty: \"bb\"},\n    ]); \n    \n    const [inputCont, setInputCont] = useState(['']); \n\n\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n        setTodos(removeArr);\n    };\n\n    const values = {\n        id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        desc: inputDesc,\n        category: inputCate,\n        content: inputCont\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {props.inputDesc}\n            {props.inputCate}\n            \n        </TodoContext.Provider>\n    )\n}\n\n// const TodoContextConsumer = TodoContext.Consumer;\n// export { TodoContext, TodoContextConsumer };\nexport default TodoContext;\n"]},"metadata":{},"sourceType":"module"}