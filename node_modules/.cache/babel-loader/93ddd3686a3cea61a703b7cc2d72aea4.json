{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { GetAllTasks } from \"../../API/GetAllTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  addTodo: todo => {},\n  removeTodo: id => {},\n  handleCheck: (id, checked) => {},\n  handleDelete: () => {}\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue);\nconst KEY = \"paraiii-todo-list\";\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const storage = window.localStorage;\n  const storedList = storage.getItem(KEY) || \"[]\"; // const [todoList, setTodoList] = useState<TodoItem[]>(JSON.parse(storedList));\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    //     storage.setItem(KEY, JSON.stringify(todoList));\n    // }, [todoList])\n    // AddTask().then(res => {\n    //      setTodoList(res.data)\n    // })\n    debugger;\n    console.log(\"haha\");\n    debugger;\n    GetAllTasks().then(res => {\n      debugger;\n      setTodoList(res.data);\n      debugger;\n    });\n  });\n\n  const addTodo = todo => {\n    setTodoList([...todoList, todo]);\n  };\n\n  const removeTodo = id => {\n    setTodoList(todoList.filter(item => {\n      return item.id !== id;\n    }));\n  };\n\n  const handleCheck = useCallback((id, checked) => {\n    const modifiedTodoList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.checked = !todoItem.checked;\n      }\n\n      return todoItem;\n    });\n    setTodoList(modifiedTodoList);\n  }, [todoList]);\n  const handleDelete = useCallback(() => {\n    const filteredTodoList = todoList.filter(todoItem => todoItem.checked === false);\n    debugger;\n    setTodoList(filteredTodoList);\n  }, [todoList]);\n  const values = {\n    todoList: todoList,\n    addTodo: addTodo,\n    removeTodo: removeTodo,\n    handleCheck: handleCheck,\n    handleDelete: handleDelete\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoContextProvider, \"agV7U/PgKiyB64YFxfJzi/lnN9Y=\");\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["createContext","useCallback","useEffect","useState","GetAllTasks","initialValue","todoList","addTodo","todo","removeTodo","id","handleCheck","checked","handleDelete","TodoContext","KEY","TodoContextProvider","props","children","storage","window","localStorage","storedList","getItem","setTodoList","console","log","then","res","data","filter","item","modifiedTodoList","map","todoItem","filteredTodoList","values"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AAEA,SAASC,WAAT,QAA4B,uBAA5B;;AAeA,OAAO,MAAMC,YAA8B,GAAG;AAC1CC,EAAAA,QAAQ,EAAE,EADgC;AAE1CC,EAAAA,OAAO,EAAGC,IAAD,IAAiB,CAAE,CAFc;AAG1CC,EAAAA,UAAU,EAAGC,EAAD,IAAgB,CAAE,CAHY;AAI1CC,EAAAA,WAAW,EAAE,CAACD,EAAD,EAAaE,OAAb,KAAkC,CAAE,CAJP;AAK1CC,EAAAA,YAAY,EAAE,MAAM,CAAE;AALoB,CAAvC;AAQP,OAAO,MAAMC,WAAW,gBAAGd,aAAa,CAACK,YAAD,CAAjC;AACP,MAAMU,GAAG,GAAG,mBAAZ;AACA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAA4B;AAAA;;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAME,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,UAAU,GAAGH,OAAO,CAACI,OAAR,CAAgBR,GAAhB,KAAwB,IAA3C,CAH2D,CAI3D;;AACA,QAAM,CAACT,QAAD,EAAWkB,WAAX,IAA0BrB,QAAQ,CAAa,EAAb,CAAxC;AAIAD,EAAAA,SAAS,CAAE,MAAM;AACjB;AACA;AACI;AACA;AACA;AACA;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AACAtB,IAAAA,WAAW,GAAGuB,IAAd,CAAmBC,GAAG,IAAI;AAEtB;AACAJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;AACA;AACJ,KALA;AAMH,GAfQ,CAAT;;AAiBA,QAAMtB,OAAO,GAAIC,IAAD,IAA0B;AACtCgB,IAAAA,WAAW,CAAC,CAAC,GAAGlB,QAAJ,EAAcE,IAAd,CAAD,CAAX;AAEH,GAHD;;AAKA,QAAMC,UAAU,GAAIC,EAAD,IAAsB;AACrCc,IAAAA,WAAW,CACPlB,QAAQ,CAACwB,MAAT,CAAiBC,IAAD,IAAS;AACrB,aAAOA,IAAI,CAACrB,EAAL,KAAYA,EAAnB;AACH,KAFD,CADO,CAAX;AAKH,GAND;;AAQA,QAAMC,WAAW,GAAGV,WAAW,CAAE,CAACS,EAAD,EAAYE,OAAZ,KAAiC;AAC9D,UAAMoB,gBAAgB,GAAG1B,QAAQ,CAAC2B,GAAT,CAAcC,QAAD,IAAc;AAClD,UAAIA,QAAQ,CAACxB,EAAT,KAAgBA,EAApB,EAAwB;AACtBwB,QAAAA,QAAQ,CAACtB,OAAT,GAAmB,CAACsB,QAAQ,CAACtB,OAA7B;AACD;;AACD,aAAOsB,QAAP;AACD,KALwB,CAAzB;AAMAV,IAAAA,WAAW,CAACQ,gBAAD,CAAX;AACH,GAR8B,EAQ5B,CAAC1B,QAAD,CAR4B,CAA/B;AAUA,QAAMO,YAAY,GAAGZ,WAAW,CAAE,MAAM;AACpC,UAAMkC,gBAAgB,GAAG7B,QAAQ,CAACwB,MAAT,CAAiBI,QAAD,IAAcA,QAAQ,CAACtB,OAAT,KAAqB,KAAnD,CAAzB;AACA;AACAY,IAAAA,WAAW,CAACW,gBAAD,CAAX;AACH,GAJ+B,EAI7B,CAAC7B,QAAD,CAJ6B,CAAhC;AAMA,QAAM8B,MAAwB,GAAG;AAC7B9B,IAAAA,QAAQ,EAAEA,QADmB;AAE7BC,IAAAA,OAAO,EAAEA,OAFoB;AAG7BE,IAAAA,UAAU,EAAEA,UAHiB;AAI7BE,IAAAA,WAAW,EAAEA,WAJgB;AAK7BE,IAAAA,YAAY,EAAEA;AALe,GAAjC;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEuB,MAA7B;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApEM;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import { createContext, useCallback, useEffect, useState } from \"react\";\nimport { AddTask } from \"../../API/AddTask\";\nimport { GetAllTasks } from \"../../API/GetAllTasks\";\nimport { TodoItem } from \"../types\";\n\ninterface TodoContextProp {\n    children: any;\n    value: TodoContextValue;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    addTodo: (todo: TodoItem) => void;\n    removeTodo: (id: string) => void;\n    handleCheck: (id: string, checked: boolean) => void;\n    handleDelete: () => void;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    addTodo: (todo:TodoItem)=>{},\n    removeTodo: (id: string) => {},\n    handleCheck: (id: string, checked: boolean) => {},\n    handleDelete: () => {},\n}\n\nexport const TodoContext = createContext(initialValue);\nconst KEY = \"paraiii-todo-list\";\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n    const storage = window.localStorage;\n    const storedList = storage.getItem(KEY) || \"[]\"\n    // const [todoList, setTodoList] = useState<TodoItem[]>(JSON.parse(storedList));\n    const [todoList, setTodoList] = useState<TodoItem[]>([]);\n\n\n\n    useEffect (() => {\n    //     storage.setItem(KEY, JSON.stringify(todoList));\n    // }, [todoList])\n        // AddTask().then(res => {\n        //      setTodoList(res.data)\n        // })\n        debugger\n        console.log(\"haha\")\n        debugger\n        GetAllTasks().then(res => {\n\n            debugger\n            setTodoList(res.data)\n            debugger\n       })\n    })\n\n    const addTodo = (todo: TodoItem): void => {\n        setTodoList([...todoList, todo]);\n\n    };\n\n    const removeTodo = (id: string): void => {\n        setTodoList (\n            todoList.filter((item)=> {\n                return item.id !== id;\n            })\n        );\n    };\n    \n    const handleCheck = useCallback ((id:string, checked: boolean) => {\n        const modifiedTodoList = todoList.map((todoItem) => {\n          if (todoItem.id === id) {\n            todoItem.checked = !todoItem.checked;\n          }\n          return todoItem;\n        });\n        setTodoList(modifiedTodoList);\n    }, [todoList]);\n\n    const handleDelete = useCallback (() => {\n        const filteredTodoList = todoList.filter((todoItem) => todoItem.checked === false);\n        debugger\n        setTodoList(filteredTodoList);\n    }, [todoList]);\n\n    const values: TodoContextValue = {\n        todoList: todoList,\n        addTodo: addTodo,\n        removeTodo: removeTodo,\n        handleCheck: handleCheck,\n        handleDelete: handleDelete,\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}