{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/style\\u524D\\u53EF\\u4EE5\\u663E\\u793A\\u5185\\u5BB9\\u65E0\\u591A\\u9879\\u5220\\u9664\\u7684/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  addTodo: todo => {},\n  removeTodo: id => {}\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue);\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props; // const [inputDesc, setInputDesc] = useState<string>('')\n  // const [inputCate, setInputCate] = useState<string>('')\n  // const [inputCont, setInputCont] = useState<string>('')\n\n  const [todoList, setTodoList] = useState([]);\n\n  const addTodo = todo => {\n    setTodoList([...todoList, todo]);\n  };\n\n  const removeTodo = id => {\n    setTodoList(todoList.filter(item => {\n      return item.id != id;\n    }));\n  };\n\n  const values = {\n    todoList: todoList,\n    // id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n    // desc: inputDesc,\n    // category: inputCate,\n    // content: inputCont,\n    addTodo: addTodo,\n    removeTodo: removeTodo\n  };\n  const handleCheck = useCallback((id, checked) => {\n    const modifiedTodoList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.checked = !todoItem.checked;\n      }\n\n      return todoItem;\n    });\n    setTodoList(modifiedTodoList);\n  }, [todoList]);\n  const handleDelete = useCallback(() => {\n    const filteredTodoList = todoList.filter(todoItem => todoItem.checked === false);\n    setTodoList(filteredTodoList);\n  }, [todoList]);\n  return (\n    /*#__PURE__*/\n    // <TodoContext.Provider value={values}>\n    _jsxDEV(TodoContext.Provider, {\n      value: values,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(TodoContextProvider, \"dUAzZAU8Ry2lrYABAWFDUyhec3M=\");\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/style前可以显示内容无多项删除的/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["createContext","useCallback","useState","initialValue","todoList","addTodo","todo","removeTodo","id","TodoContext","TodoContextProvider","props","children","setTodoList","filter","item","values","handleCheck","checked","modifiedTodoList","map","todoItem","handleDelete","filteredTodoList"],"mappings":";;;AAAA,SAAsBA,aAAtB,EAAqCC,WAArC,EAAkDC,QAAlD,QAAkE,OAAlE;;AAeA,OAAO,MAAMC,YAA8B,GAAG;AAC1CC,EAAAA,QAAQ,EAAE,EADgC;AAE1CC,EAAAA,OAAO,EAAGC,IAAD,IAAiB,CAAE,CAFc;AAG1CC,EAAAA,UAAU,EAAGC,EAAD,IAAgB,CAAE;AAHY,CAAvC;AAMP,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAACG,YAAD,CAAjC;AAEP,OAAO,MAAMO,mBAAmB,GAAIC,KAAD,IAA4B;AAAA;;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB,CAD2D,CAE3D;AACA;AACA;;AACA,QAAM,CAACP,QAAD,EAAWS,WAAX,IAA0BX,QAAQ,CAAa,EAAb,CAAxC;;AAGA,QAAMG,OAAO,GAAIC,IAAD,IAA0B;AACtCO,IAAAA,WAAW,CAAC,CAAC,GAAGT,QAAJ,EAAcE,IAAd,CAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIC,EAAD,IAAsB;AACrCK,IAAAA,WAAW,CACPT,QAAQ,CAACU,MAAT,CAAiBC,IAAD,IAAS;AACrB,aAAOA,IAAI,CAACP,EAAL,IAAWA,EAAlB;AACH,KAFD,CADO,CAAX;AAKH,GAND;;AAQA,QAAMQ,MAAwB,GAAG;AAC7BZ,IAAAA,QAAQ,EAAEA,QADmB;AAE7B;AACA;AACA;AACA;AACAC,IAAAA,OAAO,EAAEA,OANoB;AAO7BE,IAAAA,UAAU,EAAEA;AAPiB,GAAjC;AAUA,QAAMU,WAAW,GAAGhB,WAAW,CAAE,CAACO,EAAD,EAAYU,OAAZ,KAAiC;AAC9D,UAAMC,gBAAgB,GAAGf,QAAQ,CAACgB,GAAT,CAAcC,QAAD,IAAc;AAClD,UAAIA,QAAQ,CAACb,EAAT,KAAgBA,EAApB,EAAwB;AACtBa,QAAAA,QAAQ,CAACH,OAAT,GAAmB,CAACG,QAAQ,CAACH,OAA7B;AACD;;AACD,aAAOG,QAAP;AACD,KALwB,CAAzB;AAMAR,IAAAA,WAAW,CAACM,gBAAD,CAAX;AACH,GAR8B,EAQ5B,CAACf,QAAD,CAR4B,CAA/B;AAUA,QAAMkB,YAAY,GAAGrB,WAAW,CAAE,MAAM;AACpC,UAAMsB,gBAAgB,GAAGnB,QAAQ,CAACU,MAAT,CAAiBO,QAAD,IAAcA,QAAQ,CAACH,OAAT,KAAqB,KAAnD,CAAzB;AACAL,IAAAA,WAAW,CAACU,gBAAD,CAAX;AACC,GAH2B,EAGzB,CAACnB,QAAD,CAHyB,CAAhC;AAKA;AAAA;AACI;AACA,YAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEY,MAA7B;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMH,CAnDM;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import { ChangeEvent, createContext, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TodoItem } from \"../types\";\n\n\ninterface TodoContextProp {\n    children: any;\n    value: TodoContextValue;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    addTodo: (todo: TodoItem) => void;\n    removeTodo: (id: string) => void;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    addTodo: (todo:TodoItem)=>{},\n    removeTodo: (id: string) => {},\n}\n\nexport const TodoContext = createContext(initialValue);\n\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n    // const [inputDesc, setInputDesc] = useState<string>('')\n    // const [inputCate, setInputCate] = useState<string>('')\n    // const [inputCont, setInputCont] = useState<string>('')\n    const [todoList, setTodoList] = useState<TodoItem[]>([]);\n\n\n    const addTodo = (todo: TodoItem): void => {\n        setTodoList([...todoList, todo]);\n    };\n\n    const removeTodo = (id: string): void => {\n        setTodoList (\n            todoList.filter((item)=> {\n                return item.id != id;\n            })\n        );\n    };\n\n    const values: TodoContextValue = {\n        todoList: todoList,\n        // id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        // desc: inputDesc,\n        // category: inputCate,\n        // content: inputCont,\n        addTodo: addTodo,\n        removeTodo: removeTodo\n    };\n    \n    const handleCheck = useCallback ((id:string, checked: boolean) => {\n        const modifiedTodoList = todoList.map((todoItem) => {\n          if (todoItem.id === id) {\n            todoItem.checked = !todoItem.checked;\n          }\n          return todoItem;\n        });\n        setTodoList(modifiedTodoList);\n    }, [todoList]);\n\n    const handleDelete = useCallback (() => {\n        const filteredTodoList = todoList.filter((todoItem) => todoItem.checked === false);\n        setTodoList(filteredTodoList);\n        }, [todoList]);\n        \n    return (\n        // <TodoContext.Provider value={values}>\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}