{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from \"notistack\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { UserLogin } from \"../API/UserLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialValue = {\n  todoList: [],\n  loading: false,\n  login: data => {},\n  addTodo: todo => {},\n  removeTodo: id => {},\n  handleCheck: (id, checked) => {},\n  todoCompleted: (id, done) => {},\n  handleDelete: () => {},\n  authenticated: false\n};\nexport const TodoContext = /*#__PURE__*/createContext(initialValue);\nexport const TodoContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [todoList, setTodoList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    const value = window.localStorage.getItem(\"prefix-token\");\n\n    if (value) {\n      setAuthenticated(true);\n    }\n  });\n  useEffect(() => {\n    setLoading(true);\n    GetAllTasks().then(res => {\n      setLoading(false);\n      const todoDtos = res.data.data;\n      const todoItems = todoDtos.map(todoDto => {\n        const content = JSON.parse(todoDto.description);\n        return { ...content,\n          id: todoDto._id\n        };\n      });\n      setTodoList(todoItems);\n    }); // }, [todoList]); //不能有这个dependency\n  }, []);\n\n  const addTodo = todo => {\n    const todoDto = {\n      \"description\": JSON.stringify(todo)\n    };\n    setLoading(true);\n    AddTask(todoDto).then(res => {\n      //点击button之后拿到response\n      setLoading(false);\n      todo.id = res.data.data._id;\n      setTodoList([...todoList, todo]);\n      enqueueSnackbar('Successfully done the operation.');\n    });\n  };\n\n  const removeTodo = id => {\n    DeleteTask(id).then(res => {\n      setTodoList(todoList.filter(item => {\n        return item.id !== id;\n      }));\n    });\n  };\n\n  const Login = data => {\n    UserLogin(data).then(res => {\n      window.localStorage.setItem(\"prefix-token\", res.data);\n      setAuthenticated(res.data);\n    });\n  };\n\n  const handleCheck = useCallback((id, checked) => {\n    const modifiedTodoList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.checked = !todoItem.checked;\n      }\n\n      return todoItem;\n    });\n    setTodoList(modifiedTodoList);\n  }, [todoList]);\n\n  const todoCompleted = (id, done) => {\n    const setList = todoList.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.done = !todoItem.done;\n      }\n\n      return todoItem;\n    });\n    setTodoList(setList);\n  };\n\n  const handleDelete = useCallback(() => {\n    const filteredTodoList = todoList.filter(todoItem => todoItem.checked === false);\n    setTodoList(filteredTodoList);\n  }, [todoList]);\n  const values = {\n    todoList: todoList,\n    loading: loading,\n    login: Login,\n    addTodo: addTodo,\n    removeTodo: removeTodo,\n    handleCheck: handleCheck,\n    todoCompleted: todoCompleted,\n    handleDelete: handleDelete,\n    authenticated: authenticated\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoContextProvider, \"WZvVNKVYzrgtgPgHPvgr8zB1XQc=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Context/TodoContext.tsx"],"names":["useSnackbar","createContext","useCallback","useEffect","useState","AddTask","DeleteTask","GetAllTasks","UserLogin","initialValue","todoList","loading","login","data","addTodo","todo","removeTodo","id","handleCheck","checked","todoCompleted","done","handleDelete","authenticated","TodoContext","TodoContextProvider","props","children","setTodoList","setLoading","enqueueSnackbar","setAuthenticated","value","window","localStorage","getItem","then","res","todoDtos","todoItems","map","todoDto","content","JSON","parse","description","_id","stringify","filter","item","Login","setItem","modifiedTodoList","todoItem","setList","filteredTodoList","values"],"mappings":"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","sourcesContent":["import { useSnackbar } from \"notistack\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { AddTask } from \"../API/AddTask\";\nimport { DeleteTask } from \"../API/DeleteTask\";\nimport { GetAllTasks } from \"../API/GetAllTasks\";\nimport { TodoDto, TodoItem } from \"../types\";\nimport {UserLogin} from \"../API/UserLogin\";\n\ninterface TodoContextProp {\n    children: any;\n    value: TodoContextValue;\n}\n\nexport interface TodoContextValue {\n    todoList: TodoItem[];\n    loading: boolean;\n    login: (data: {username: string, password: string}) => void;\n    addTodo: (todo: TodoItem) => void;\n    removeTodo: (id: string) => void;\n    handleCheck: (id: string, checked: boolean) => void;\n    todoCompleted: (id: string, done: boolean) => void;\n    handleDelete: () => void;\n    authenticated: boolean;\n}\nexport const initialValue: TodoContextValue = {\n    todoList: [],\n    loading: false,\n    login: (data: {username: string, password: string}) => {},\n    addTodo: (todo:TodoItem)=>{},\n    removeTodo: (id: string) => {},\n    handleCheck: (id: string, checked: boolean) => {},\n    todoCompleted: (id: string, done: boolean) => {},\n    handleDelete: () => {},\n    authenticated: false,\n}\n\nexport const TodoContext = createContext(initialValue);\n\nexport const TodoContextProvider = (props: TodoContextProp) => {\n    const {children} = props;    \n    const [todoList, setTodoList] = useState<TodoItem[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);      \n    const { enqueueSnackbar } = useSnackbar();\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect (() => {\n        const value = window.localStorage.getItem(\"prefix-token\")\n        if (value) {\n            setAuthenticated(true)\n        }\n    })\n    \n    useEffect (() => {\n        setLoading(true);\n        GetAllTasks().then(res => {\n            setLoading(false);\n            const todoDtos = res.data.data;\n            const todoItems = todoDtos.map((todoDto: TodoDto) => {\n                const content: Partial<TodoItem> = JSON.parse(todoDto.description)\n                return { ...content, id: todoDto._id}\n            })\n            setTodoList(todoItems)\n       })\n    // }, [todoList]); //不能有这个dependency\n    }, []);\n\n    const addTodo = (todo: TodoItem): void => {\n        const todoDto: Partial<TodoDto> = {\n            \"description\": JSON.stringify(todo)\n        }; \n        setLoading(true);\n        AddTask(todoDto).then(res => { //点击button之后拿到response\n            setLoading(false);\n            todo.id = res.data.data._id\n            setTodoList([...todoList, todo]);\n            enqueueSnackbar('Successfully done the operation.' )            \n        });\n    };  \n    \n    const removeTodo = (id: string): void => {\n        DeleteTask(id).then(res => {\n            setTodoList (\n                todoList.filter((item)=> {\n                    return item.id !== id;\n                })\n            );\n        })\n    };\n    \n    const Login = (data: any): void => {\n        UserLogin (data).then(res => {\n            window.localStorage.setItem(\"prefix-token\", res.data);\n            setAuthenticated(res.data);\n        })\n\n    ;}\n\n    const handleCheck = useCallback ((id:string, checked: boolean) => {\n        const modifiedTodoList = todoList.map((todoItem) => {\n          if (todoItem.id === id) {\n            todoItem.checked = !todoItem.checked;\n          }\n          return todoItem;\n        });\n        setTodoList(modifiedTodoList);\n    }, [todoList]);\n\n    const todoCompleted = (id: string, done: boolean): void => {\n        const setList = todoList.map((todoItem)=> {\n            if (todoItem.id === id) {\n                todoItem.done = !todoItem.done;\n            }\n            return todoItem;\n        });   \n        setTodoList(setList);\n    };\n\n    const handleDelete = useCallback (() => {\n        const filteredTodoList = todoList.filter((todoItem) => todoItem.checked === false);\n        setTodoList(filteredTodoList);\n    }, [todoList]);\n\n    const values: TodoContextValue = {\n        todoList: todoList,\n        loading: loading,\n        login: Login,\n        addTodo: addTodo,\n        removeTodo: removeTodo,\n        handleCheck: handleCheck,\n        todoCompleted: todoCompleted,\n        handleDelete: handleDelete,\n        authenticated: authenticated,\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}