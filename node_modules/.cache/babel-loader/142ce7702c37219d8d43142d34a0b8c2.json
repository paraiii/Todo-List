{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { Children, useState } from 'react';\nimport Delete from '../Delete'; // export interface AllData {\n// }\n// export const mock: AllData = {\n// }\n// export const TodoContext = React.createContext(mock)\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoContext(children) {\n  _s();\n\n  const [inputDesc, setInputDesc] = useState([{\n    Description: 1\n  }, {\n    Description: 2\n  }]);\n\n  const handleChangeDesc = e => {\n    setInputDesc(e.target.value);\n  };\n\n  const [inputCate, setInputCate] = useState([]);\n  const [inputCont, setInputCont] = useState(['']);\n  const [todos, setTodos] = useState([{\n    desc: 1,\n    category: \"JS\"\n  }, {\n    desc: 2,\n    category: \"CSS\"\n  }]);\n\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont,\n    add: addTodo,\n    remove: removeTodo // actions: {\n    //     addTodo: this.addTodo,\n    //     removeTodo: this.removeTodo\n    // }\n\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoContext, \"J65AoVYim9iyC6+dU/J4/Cm9Gdw=\");\n\n_c = TodoContext;\nexport default TodoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContext\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js"],"names":["React","Children","useState","Delete","TodoContext","children","inputDesc","setInputDesc","Description","handleChangeDesc","e","target","value","inputCate","setInputCate","inputCont","setInputCont","todos","setTodos","desc","category","addTodo","todo","newTodos","removeTodo","id","removeArr","filter","values","Math","floor","random","content","add","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;AAIA,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CACvC;AAACM,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;;AAIA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AAEA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAC/B;AAAEiB,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAD+B,EAE/B;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAF+B,CAAD,CAAlC;;AAKA,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACpB,UAAMC,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGL,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGT,KAAJ,EAAWU,MAAX,CAAkBL,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYA,EAAtC,CAAlB;AACAP,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACH,GAHD;;AAKA,QAAME,MAAM,GAAG;AACXH,IAAAA,EAAE,EAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAC2B;AACtCZ,IAAAA,IAAI,EAAEb,SAFK;AAGXc,IAAAA,QAAQ,EAAEP,SAHC;AAIXmB,IAAAA,OAAO,EAAEjB,SAJE;AAKXkB,IAAAA,GAAG,EAAEZ,OALM;AAMXa,IAAAA,MAAM,EAAEV,UANG,CAOX;AACA;AACA;AACA;;AAVW,GAAf;AAaA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,MAA7B;AAAA,cACKvB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhDQD,W;;KAAAA,W;AAkDT,eAAeA,WAAf","sourcesContent":["import React, { Children, useState } from 'react';\nimport Delete from '../Delete';\n\n// export interface AllData {\n// }\n\n// export const mock: AllData = {\n    \n// }\n\n// export const TodoContext = React.createContext(mock)\n\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\n\n\nfunction TodoContext (children) {\n\n    const [inputDesc, setInputDesc] = useState([\n        {Description: 1},\n        {Description: 2}\n    ]);\n    const handleChangeDesc = e => {\n        setInputDesc(e.target.value);\n    }\n\n    const [inputCate, setInputCate] = useState([\n    ]); \n    \n    const [inputCont, setInputCont] = useState(['']); \n\n    const [todos, setTodos] = useState([\n        { desc: 1, category: \"JS\"},\n        { desc: 2, category: \"CSS\"}\n    ]);\n\n    const addTodo = todo => {\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n        setTodos(removeArr);\n    };\n\n    const values = {\n        id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        desc: inputDesc,\n        category: inputCate,\n        content: inputCont,\n        add: addTodo,\n        remove: removeTodo\n        // actions: {\n        //     addTodo: this.addTodo,\n        //     removeTodo: this.removeTodo\n        // }\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\nexport default TodoContext;\n"]},"metadata":{},"sourceType":"module"}