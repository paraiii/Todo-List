{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // export interface AllData {\n// }\n// export const mock: AllData = {\n// }\n// export const TodoContext = React.createContext(mock)\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoContext(props) {\n  _s();\n\n  const [inputDesc, setInputDesc] = useState([{\n    Description: 1\n  }, {\n    Description: 2\n  }]);\n\n  const handleChangeDesc = e => {\n    setInputDesc(e.target.value);\n  };\n\n  const [inputCate, setInputCate] = useState([{\n    Categoty: \"aa\"\n  }, {\n    Categoty: \"bb\"\n  }]);\n  const [inputCont, setInputCont] = useState(['']); // const addTodo = todo => {\n  //     setInputDesc(newInputDesc);\n  //     const newTodoList = produce(this.state.todolist, draft => {\n  //       draft.push({ no: new Date().getTime(), todo: todo, done: false });\n  //     });\n  //     this.setState({ todolist: newTodoList });\n  //   };\n\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: [props.inputDesc, props.inputCate]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoContext, \"DfRi7/n3ydvxuWmvFyshT8l7W5w=\");\n\n_c = TodoContext;\nexport default TodoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContext\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js"],"names":["React","useState","TodoContext","props","inputDesc","setInputDesc","Description","handleChangeDesc","e","target","value","inputCate","setInputCate","Categoty","inputCont","setInputCont","values","id","Math","floor","random","desc","category","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;AAIA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAGzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CACvC;AAACK,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;;AAIA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CACvC;AAACY,IAAAA,QAAQ,EAAE;AAAX,GADuC,EAEvC;AAACA,IAAAA,QAAQ,EAAE;AAAX,GAFuC,CAAD,CAA1C;AAKA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C,CAhByB,CAkBzB;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMe,MAAM,GAAG;AACfC,IAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADY;AACuB;AACtCC,IAAAA,IAAI,EAAEjB,SAFS;AAGfkB,IAAAA,QAAQ,EAAEX,SAHK;AAIfY,IAAAA,OAAO,EAAET;AAJM,GAAf;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,MAA7B;AAAA,eACKb,KAAK,CAACC,SADX,EAEKD,KAAK,CAACQ,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAxCQT,W;;KAAAA,W;AA0CT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\n// export interface AllData {\n// }\n\n// export const mock: AllData = {\n    \n// }\n\n// export const TodoContext = React.createContext(mock)\n\n// interface TodoContextProviderProps {\n//     children: object\n// }\n\n\n\nfunction TodoContext (props) {\n\n\n    const [inputDesc, setInputDesc] = useState([\n        {Description: 1},\n        {Description: 2}\n    ]);\n    const handleChangeDesc = e => {\n        setInputDesc(e.target.value);\n    }\n\n    const [inputCate, setInputCate] = useState([\n        {Categoty: \"aa\"},\n        {Categoty: \"bb\"},\n    ]); \n    \n    const [inputCont, setInputCont] = useState(['']); \n\n    // const addTodo = todo => {\n    //     setInputDesc(newInputDesc);\n\n    //     const newTodoList = produce(this.state.todolist, draft => {\n    //       draft.push({ no: new Date().getTime(), todo: todo, done: false });\n    //     });\n    //     this.setState({ todolist: newTodoList });\n    //   };\n    \n    const values = {\n    id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {props.inputDesc}\n            {props.inputCate}\n        </TodoContext.Provider>\n    )\n}\n\nexport default TodoContext;\n"]},"metadata":{},"sourceType":"module"}