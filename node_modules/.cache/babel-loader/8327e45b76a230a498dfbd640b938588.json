{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack';\nimport React, { useState, useContext, useCallback } from 'react';\nimport styled from \"styled-components\";\nimport { TodoContext } from './Context/TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n\n  const {\n    addTodo,\n    loading\n  } = useContext(TodoContext);\n  const [inputDesc, setInputDesc] = useState('');\n  const [inputCate, setInputCate] = useState('');\n  const [inputCont, setInputCont] = useState('');\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const handleChangeDesc = useCallback(event => {\n    setInputDesc(event.target.value);\n  }, []);\n  const handleChangeCate = useCallback(event => {\n    setInputCate(event.target.value);\n  }, []);\n  const handleChangeCont = useCallback(event => {\n    setInputCont(event.target.value);\n  }, []);\n\n  const addClick = button => {\n    addTodo({\n      id: Date.now().toString(),\n      //现在的时间戳\n      desc: inputDesc,\n      category: inputCate,\n      content: inputCont,\n      checked: false,\n      done: false\n    });\n    const buttons = [enqueueSnackbar('Successfully done the operation.')];\n    return buttons.map(button => /*#__PURE__*/_jsxDEV(PopButton, {\n      onClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoListTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Start Add Todo's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(FormTr, {\n          children: [/*#__PURE__*/_jsxDEV(FormTh, {\n            children: \" Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormTh, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"text\",\n              value: inputDesc,\n              className: \"todo-input\",\n              onChange: handleChangeDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormTr, {\n          children: [/*#__PURE__*/_jsxDEV(FormTh, {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormTh, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: inputCate,\n              name: \"category\",\n              className: \"todo-input\",\n              onChange: handleChangeCate,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CSS\",\n                children: \"CSS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"JS\",\n                children: \"JS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormTr, {\n          children: [/*#__PURE__*/_jsxDEV(FormTh, {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormTh, {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: inputCont,\n              name: \"category\",\n              className: \"todo-input\",\n              onChange: handleChangeCont\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonTh, {\n            children: /*#__PURE__*/_jsxDEV(AddButton, {\n              onClick: addClick,\n              disabled: loading,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"CvgjPUEujRX9ARWG+FvGaV9mXsA=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Form;\nconst FormTr = styled.tr`\n    text-align: left;\n`;\n_c2 = FormTr;\nconst FormTh = styled.th`\n    padding: 10px;\n`;\n_c3 = FormTh;\nconst ButtonTh = styled.th`\n    text-align: right;\n`;\n_c4 = ButtonTh;\nconst PopButton = styled.th`\n`;\n_c5 = PopButton;\nconst AddButton = styled.button`\n    background-color: orange;\n    color: white;\n    border-radius: 4px;\n`;\n_c6 = AddButton;\nconst TodoListTitle = styled.div`\n    text-align: center;\n    \n`;\n_c7 = TodoListTitle;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"FormTr\");\n$RefreshReg$(_c3, \"FormTh\");\n$RefreshReg$(_c4, \"ButtonTh\");\n$RefreshReg$(_c5, \"PopButton\");\n$RefreshReg$(_c6, \"AddButton\");\n$RefreshReg$(_c7, \"TodoListTitle\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Form.tsx"],"names":["useSnackbar","React","useState","useContext","useCallback","styled","TodoContext","Form","addTodo","loading","inputDesc","setInputDesc","inputCate","setInputCate","inputCont","setInputCont","enqueueSnackbar","handleChangeDesc","event","target","value","handleChangeCate","handleChangeCont","addClick","button","id","Date","now","toString","desc","category","content","checked","done","buttons","map","FormTr","tr","FormTh","th","ButtonTh","PopButton","AddButton","TodoListTitle","div"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack';\nimport React, { ChangeEvent, useState, useContext, useCallback } from 'react';\nimport styled from \"styled-components\";\nimport { TodoContext } from './Context/TodoContext';\n\nexport const Form = () => {\n    const { addTodo, loading } = useContext(TodoContext)\n    const [inputDesc, setInputDesc] = useState<string>('')\n    const [inputCate, setInputCate] = useState<string>('')\n    const [inputCont, setInputCont] = useState<string>('')\n    const { enqueueSnackbar } = useSnackbar();\n    \n    const handleChangeDesc = useCallback ((event: ChangeEvent<HTMLInputElement>): void => {\n        setInputDesc(event.target.value)\n    }, [])\n    const handleChangeCate= useCallback ((event: ChangeEvent<HTMLSelectElement>): void => {\n        setInputCate(event.target.value)\n    }, [])\n    const handleChangeCont = useCallback ((event: ChangeEvent<HTMLTextAreaElement>): void => {\n        setInputCont(event.target.value)\n    }, [])\n\n    const addClick = (button: any) => {\n        addTodo({\n            id: Date.now().toString(), //现在的时间戳\n            desc: inputDesc,\n            category: inputCate,\n            content: inputCont,\n            checked: false,\n            done: false,\n        });   \n        const buttons = [\n            enqueueSnackbar('Successfully done the operation.' ),\n        ]; \n        return (\n            buttons.map((button) => (\n            <PopButton onClick={addClick}>\n            </PopButton>\n         )))\n    }\n\n    return (\n        <div>\n            <TodoListTitle>\n                <h1>Start Add Todo's</h1>\n            </TodoListTitle>\n            <table> \n                <thead>\n                    <FormTr>\n                        <FormTh> Description: </FormTh>\n                        <FormTh>\n                            <input \n                                type='text'\n                                name='text'\n                                value={inputDesc}\n                                className='todo-input'\n                                onChange={handleChangeDesc}\n                            />\n                        </FormTh>\n                    </FormTr>\n                    <FormTr>\n                        <FormTh>Category:</FormTh>\n                        <FormTh>\n                            <select\n                                value={inputCate}\n                                name='category'\n                                className='todo-input'\n                                onChange={handleChangeCate}\n                            >\n                                <option value=\"\"></option>\n                                <option value=\"CSS\">CSS</option>\n                                <option value=\"JS\">JS</option>\n                            </select>\n                        </FormTh>\n                    </FormTr>\n                    <FormTr>\n                        <FormTh>Content:</FormTh>\n                        <FormTh>\n                            <textarea \n                                value={inputCont}\n                                name='category'\n                                className='todo-input'\n                                onChange={handleChangeCont}\n                            />\n                        </FormTh>\n                    </FormTr>\n                    <tr>\n                        <th></th>\n                        <ButtonTh>\n                            <AddButton \n                                onClick= {addClick} \n                                disabled={loading}>\n                                    Add\n                            </AddButton>\n                        </ButtonTh>\n\n                    </tr>\n                </thead>\n            </table>\n        </div>\n    );\n}\n\nconst FormTr = styled.tr`\n    text-align: left;\n`\nconst FormTh = styled.th`\n    padding: 10px;\n`\nconst ButtonTh = styled.th`\n    text-align: right;\n`\nconst PopButton = styled.th`\n`\nconst AddButton = styled.button`\n    background-color: orange;\n    color: white;\n    border-radius: 4px;\n`\nconst TodoListTitle = styled.div`\n    text-align: center;\n    \n`\n\n\n"]},"metadata":{},"sourceType":"module"}