{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { Children, useState } from 'react';\nimport Delete from '../Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoContext(children) {\n  _s();\n\n  const [inputDesc, setInputDesc] = useState([{\n    Description: \"1\"\n  }, {\n    Description: \"2\"\n  }]);\n  const [inputCate, setInputCate] = useState([]);\n  const [inputCont, setInputCont] = useState(['']);\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const [todoList, SetTodoList] = useState([{\n    desc: 1,\n    category: \"JS\"\n  }, {\n    desc: 2,\n    category: \"CSS\"\n  }]);\n  const values = {\n    id: Math.floor(Math.random() * 1000),\n    //给todolist的事随机分配一个0-1000的数做id\n    desc: inputDesc,\n    category: inputCate,\n    content: inputCont,\n    actions: {\n      add: addTodo,\n      remove: removeTodo\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoContext, \"VuY0drIrqplmnXrZ34RG8y+/oH8=\");\n\n_c = TodoContext;\nexport default TodoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContext\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/components/Hooks/TodoContext.js"],"names":["React","Children","useState","Delete","TodoContext","children","inputDesc","setInputDesc","Description","inputCate","setInputCate","inputCont","setInputCont","todos","setTodos","addTodo","todo","newTodos","removeTodo","id","removeArr","filter","todoList","SetTodoList","desc","category","values","Math","floor","random","content","actions","add","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAGA,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CACvC;AAACM,IAAAA,WAAW,EAAE;AAAd,GADuC,EAEvC;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFuC,CAAD,CAA1C;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;AAEA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMa,OAAO,GAAGC,IAAI,IAAI;AACpB,UAAMC,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGP,KAAJ,EAAWQ,MAAX,CAAkBL,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYA,EAAtC,CAAlB;AACAL,IAAAA,QAAQ,CAACM,SAAD,CAAR;AACH,GAHD;;AAIA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,CACrC;AAAEsB,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GADqC,EAErC;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAFqC,CAAD,CAAxC;AAIA,QAAMC,MAAM,GAAG;AACXP,IAAAA,EAAE,EAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAC2B;AACtCL,IAAAA,IAAI,EAAElB,SAFK;AAGXmB,IAAAA,QAAQ,EAAEhB,SAHC;AAIXqB,IAAAA,OAAO,EAAEnB,SAJE;AAKXoB,IAAAA,OAAO,EAAE;AACLC,MAAAA,GAAG,EAAEjB,OADA;AAELkB,MAAAA,MAAM,EAAEf;AAFH;AALE,GAAf;AAWA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEQ,MAA7B;AAAA,cACKrB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3CQD,W;;KAAAA,W;AA6CT,eAAeA,WAAf","sourcesContent":["import React, { Children, useState } from 'react';\nimport Delete from '../Delete';\n\n\nfunction TodoContext (children) {\n\n    const [inputDesc, setInputDesc] = useState([\n        {Description: \"1\"},\n        {Description: \"2\"}\n    ]);\n    const [inputCate, setInputCate] = useState([\n    ]); \n    \n    const [inputCont, setInputCont] = useState(['']); \n\n    const [todos, setTodos] = useState([]);\n\n    \n    const addTodo = todo => {\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n        setTodos(removeArr);\n    };\n    const [todoList, SetTodoList] = useState([\n        { desc: 1, category: \"JS\"},\n        { desc: 2, category: \"CSS\"}\n    ])\n    const values = {\n        id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n        desc: inputDesc,\n        category: inputCate,\n        content: inputCont,\n        actions: {\n            add: addTodo,\n            remove: removeTodo\n        }\n    };\n\n    return (\n        <TodoContext.Provider value={values}>\n            {children}\n        </TodoContext.Provider>\n    );\n}\n\nexport default TodoContext;\n"]},"metadata":{},"sourceType":"module"}