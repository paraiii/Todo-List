{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/component/Hooks/TodoContext.tsx\";\n// import React, { Children, createContext, useState } from 'react';\n// import TodoItem from '../../TodoItem';\n// import Delete from '../Delete';\n// interface TodoContextProps {\n//     children: object\n// }\n// export const initialValue = {\n//     // todoList: TodoItem[]\n// }\n// // 先定义一个context\n// export const TodoContext  = createContext ({});\n//  const TodoContextProvider = (props: TodoContextProps) => {\n//     const {children} = props;\n//     const [inputDesc, setInputDesc] = useState([\n//         {Description: \"1\"},\n//         {Description: \"2\"}\n//     ]);\n//     const [inputCate, setInputCate] = useState([\n//     ]); \n//     const [inputCont, setInputCont] = useState(['']); \n//     const [todos, setTodos] = useState([]);\n//     // const addTodo = todo => {\n//     //     // const newTodos = [todo, ...todos];\n//     //     // setTodos(newTodos);\n//     //     const newInputDesc = [todo, ...todos]\n//     //     setInputDesc(newInputDesc);\n//     // };\n//     // const removeTodo = id => {\n//     //     const removeArr = [...todos].filter(todo => todo.id !== id);\n//     //     setTodos(removeArr);\n//     // };\n//     const values = {\n//         id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n//         desc: inputDesc,\n//         category: inputCate,\n//         content: inputCont,\n//         // actions: {\n//         //     add: addTodo,\n//         //     remove: removeTodo\n//         // }\n//     };\n//     return (\n//         <TodoContext.Provider value={values}>\n//             {children}\n//         </TodoContext.Provider>\n//     );\n// }\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoContext() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_c = TodoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContext\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/component/Hooks/TodoContext.tsx"],"names":["React","TodoContext"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBA,W","sourcesContent":["// import React, { Children, createContext, useState } from 'react';\n// import TodoItem from '../../TodoItem';\n// import Delete from '../Delete';\n\n// interface TodoContextProps {\n//     children: object\n// }\n\n// export const initialValue = {\n//     // todoList: TodoItem[]\n// }\n// // 先定义一个context\n// export const TodoContext  = createContext ({});\n\n//  const TodoContextProvider = (props: TodoContextProps) => {\n//     const {children} = props;\n//     const [inputDesc, setInputDesc] = useState([\n//         {Description: \"1\"},\n//         {Description: \"2\"}\n//     ]);\n//     const [inputCate, setInputCate] = useState([\n//     ]); \n    \n//     const [inputCont, setInputCont] = useState(['']); \n\n//     const [todos, setTodos] = useState([]);\n\n    \n//     // const addTodo = todo => {\n//     //     // const newTodos = [todo, ...todos];\n//     //     // setTodos(newTodos);\n//     //     const newInputDesc = [todo, ...todos]\n//     //     setInputDesc(newInputDesc);\n//     // };\n\n//     // const removeTodo = id => {\n//     //     const removeArr = [...todos].filter(todo => todo.id !== id);\n//     //     setTodos(removeArr);\n//     // };\n  \n//     const values = {\n//         id:Math.floor(Math.random() * 1000),  //给todolist的事随机分配一个0-1000的数做id\n//         desc: inputDesc,\n//         category: inputCate,\n//         content: inputCont,\n//         // actions: {\n//         //     add: addTodo,\n//         //     remove: removeTodo\n//         // }\n//     };\n\n    \n\n//     return (\n//         <TodoContext.Provider value={values}>\n//             {children}\n//         </TodoContext.Provider>\n//     );\n// }\n\nimport React from 'react'\n\nexport default function TodoContext() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}