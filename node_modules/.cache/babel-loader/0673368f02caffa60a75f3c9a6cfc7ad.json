{"ast":null,"code":"var _jsxFileName = \"/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styled from \"styled-components\";\nimport { TodoContext } from './Context/TodoContext';\nimport { InputTodo } from './InputTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n\n  // const [inputDesc, setInputDesc] = useState<string>('')\n  // const [inputCate, setInputCate] = useState<string>('')\n  // const [inputCont, setInputCont] = useState<string>('')\n  // const [todoList, setTodoList] = useState<ItodoList[]>([]);\n  // const handleChangeDesc = (event: ChangeEvent<HTMLInputElement>): void => {\n  //     setInputDesc(event.target.value)\n  // };\n  // const handleChangeCate= (event: ChangeEvent<HTMLInputElement>): void => {\n  //     setInputCate(event.target.value)\n  // };\n  // const handleChangeCont = (event: ChangeEvent<HTMLInputElement>): void => {\n  //     setInputCont(event.target.value)\n  // };\n  const {\n    values,\n    addTodo,\n    removeTodo\n  } = useContext(TodoContext); // const addTodo = (): void => {\n  //     const newTodo = { desc: inputDesc, category: inputCate, content: inputCont};\n  //     setTodoList([...todoList, newTodo]);\n  //     setInputDesc(\"\");\n  //     setInputCate(\"\");\n  //     setInputCont(\"\");\n  // };\n  // const removeTodo = (descDelete: string): void => {\n  //     setTodoList (\n  //         todoList.filter((inputDesc)=> {\n  //             return inputDesc.desc != descDelete;\n  //         })\n  //     );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \" Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          value: values.inputDesc,\n          className: \"todo-input\",\n          onChange: values.handleChangeDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: values.inputCate,\n          name: \"category\",\n          className: \"todo-input\",\n          onChange: values.handleChangeCate,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CSS\",\n            children: \"CSS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"JS\",\n            children: \"JS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: values.inputCont,\n          name: \"category\",\n          className: \"todo-input\",\n          onChange: values.handleChangeCont\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todoList.map((inputDesc, key) => {\n          return /*#__PURE__*/_jsxDEV(InputTodo, {\n            inputDesc: inputDesc,\n            removeTodo: removeTodo\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"SSIn4ApCiun4Jl1W3nH6ddbC20w=\");\n\n_c = Form;\nconst NavContainer = styled.div`\n    \n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/paraiii/Desktop/Todo-about-app-main 2/src/Components/Form.tsx"],"names":["React","useContext","styled","TodoContext","InputTodo","Form","values","addTodo","removeTodo","inputDesc","handleChangeDesc","inputCate","handleChangeCate","inputCont","handleChangeCont","todoList","map","key","NavContainer","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAuCC,UAAvC,QAAyD,OAAzD;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAKA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAAiCP,UAAU,CAACE,WAAD,CAAjD,CAjB0B,CAmBtB;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ,sBACI;AAAA,2BACI;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAEG,MAAM,CAACG,SAHlB;AAII,UAAA,SAAS,EAAC,YAJd;AAKI,UAAA,QAAQ,EAAEH,MAAM,CAACI;AALrB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEJ,MAAM,CAACK,SADlB;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,SAAS,EAAC,YAHd;AAII,UAAA,QAAQ,EAAEL,MAAM,CAACM,gBAJrB;AAAA,kCAMI;AAAQ,YAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAwBI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEN,MAAM,CAACO,SADlB;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,SAAS,EAAC,YAHd;AAII,UAAA,QAAQ,EAAEP,MAAM,CAACQ;AAJrB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAiCI;AAAQ,QAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,eAkCI;AAAA,kBACKQ,QAAQ,CAACC,GAAT,CAAa,CAACP,SAAD,EAAuBQ,GAAvB,KAAuC;AACjD,8BAAO,QAAC,SAAD;AAAqB,YAAA,SAAS,EAAER,SAAhC;AAA2C,YAAA,UAAU,EAAED;AAAvD,aAAgBS,GAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CC,CAlFM;;GAAMZ,I;;KAAAA,I;AAoFb,MAAMa,YAAY,GAAGhB,MAAM,CAACiB,GAAI;AAChC;AACA,CAFA","sourcesContent":["import React, { ChangeEvent, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport { TodoContext } from './Context/TodoContext';\nimport { InputTodo } from './InputTodo';\nimport { Todo } from './Todo';\nimport { TodoList } from './TodoList';\nimport { ItodoList } from './types';\n\nexport const Form = () => {\n\n    // const [inputDesc, setInputDesc] = useState<string>('')\n    // const [inputCate, setInputCate] = useState<string>('')\n    // const [inputCont, setInputCont] = useState<string>('')\n    // const [todoList, setTodoList] = useState<ItodoList[]>([]);\n\n\n    // const handleChangeDesc = (event: ChangeEvent<HTMLInputElement>): void => {\n    //     setInputDesc(event.target.value)\n    // };\n    // const handleChangeCate= (event: ChangeEvent<HTMLInputElement>): void => {\n    //     setInputCate(event.target.value)\n    // };\n    // const handleChangeCont = (event: ChangeEvent<HTMLInputElement>): void => {\n    //     setInputCont(event.target.value)\n    // };\nconst {values, addTodo, removeTodo } = useContext(TodoContext)\n\n    // const addTodo = (): void => {\n\n    //     const newTodo = { desc: inputDesc, category: inputCate, content: inputCont};\n    //     setTodoList([...todoList, newTodo]);\n    //     setInputDesc(\"\");\n    //     setInputCate(\"\");\n    //     setInputCont(\"\");\n    // };\n\n    // const removeTodo = (descDelete: string): void => {\n    //     setTodoList (\n    //         todoList.filter((inputDesc)=> {\n    //             return inputDesc.desc != descDelete;\n    //         })\n    //     );\n    // };\n\n\nreturn (\n    <div>\n        <form> \n            <div>\n                <text> Description: </text>\n                    <input \n                        type='text'\n                        name='text'\n                        value={values.inputDesc}\n                        className='todo-input'\n                        onChange={values.handleChangeDesc}\n                    />\n            </div>\n            <div>\n                <text>Category:</text>\n                <select\n                    value={values.inputCate}\n                    name='category'\n                    className='todo-input'\n                    onChange={values.handleChangeCate}\n                >\n                    <option value=\"\"></option>\n                    <option value=\"CSS\">CSS</option>\n                    <option value=\"JS\">JS</option>\n                </select>\n            </div>\n            <div>\n                <text>Content:</text>\n                <textarea \n                    value={values.inputCont}\n                    name='category'\n                    className='todo-input'\n                    onChange={values.handleChangeCont}\n                />\n            </div>\n            <button onClick={addTodo}>Submit</button>\n            <div>\n                {todoList.map((inputDesc: ItodoList, key: number) => {\n                    return <InputTodo key={key} inputDesc={inputDesc} removeTodo={removeTodo} />;\n                })}\n            </div>\n        </form>\n    </div>\n    \n);\n}\n\nconst NavContainer = styled.div`\n    \n`"]},"metadata":{},"sourceType":"module"}